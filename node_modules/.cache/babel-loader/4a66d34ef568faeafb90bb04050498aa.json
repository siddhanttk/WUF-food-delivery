{"ast":null,"code":"var _jsxFileName = \"C:\\\\impdata\\\\projects\\\\React_work\\\\foodordering_app\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existingCartItemIndex = state.items;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const updatedItems = state.items.filter();\n  }\n\n  return {\n    items: [],\n    totalAmount: 0\n  };\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartHandler] = useReducer(cartReducer, {\n    items: [],\n    totalAmount: 0\n  });\n\n  const addItemHandler = item => {\n    dispatchCartHandler({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartHandler({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"qteXf9HOA/Bp1IPYkV9YKeDzwJw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/impdata/projects/React_work/foodordering_app/src/components/store/CartProvider.js"],"names":["CartContext","useReducer","cartReducer","state","action","type","updatedAmount","totalAmount","item","amount","price","existingCartItemIndex","items","updatedItems","concat","filter","CartProvider","props","cartState","dispatchCartHandler","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EACA;AACI,UAAMC,aAAa,GAAGH,KAAK,CAACI,WAAN,GAAoBH,MAAM,CAACI,IAAP,CAAYC,MAAZ,GAAmBL,MAAM,CAACI,IAAP,CAAYE,KAAzE;AACA,UAAMC,qBAAqB,GAAGR,KAAK,CAACS,KAApC;AACA,UAAMC,YAAY,GAAGV,KAAK,CAACS,KAAN,CAAYE,MAAZ,CAAmBV,MAAM,CAACI,IAA1B,CAArB;AAGA,WAAO;AAAEI,MAAAA,KAAK,EAAEC,YAAT;AAAuBN,MAAAA,WAAW,EAAED;AAApC,KAAP;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,QAAnB,EACA;AACI,UAAMQ,YAAY,GAAGV,KAAK,CAACS,KAAN,CAAYG,MAAZ,EAArB;AACH;;AACD,SAAO;AAAEH,IAAAA,KAAK,EAAE,EAAT;AAAaL,IAAAA,WAAW,EAAE;AAA1B,GAAP;AACH,CAfD;;AAiBA,MAAMS,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,mBAAZ,IAAmClB,UAAU,CAACC,WAAD,EAAc;AAC7DU,IAAAA,KAAK,EAAE,EADsD;AAE7DL,IAAAA,WAAW,EAAE;AAFgD,GAAd,CAAnD;;AAIA,QAAMa,cAAc,GAAIZ,IAAD,IAAU;AAC7BW,IAAAA,mBAAmB,CAAC;AAACd,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAnB;AACH,GAFD;;AAGA,QAAMa,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,mBAAmB,CAAC;AAACd,MAAAA,IAAI,EAAE,QAAP;AAAiBiB,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAnB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBX,IAAAA,KAAK,EAAEM,SAAS,CAACN,KADD;AAEhBL,IAAAA,WAAW,EAAEW,SAAS,CAACX,WAFP;AAGhBiB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD')\r\n    {\r\n        const updatedAmount = state.totalAmount + action.item.amount*action.item.price;\r\n        const existingCartItemIndex = state.items\r\n        const updatedItems = state.items.concat(action.item);\r\n        \r\n        \r\n        return { items: updatedItems, totalAmount: updatedAmount }\r\n    }\r\n    if(action.type === 'REMOVE')\r\n    {\r\n        const updatedItems = state.items.filter()\r\n    }\r\n    return { items: [], totalAmount: 0 }\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartHandler] = useReducer(cartReducer, {\r\n        items: [],\r\n        totalAmount: 0\r\n    })\r\n    const addItemHandler = (item) => {\r\n        dispatchCartHandler({type: 'ADD', item: item});\r\n    }\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartHandler({type: 'REMOVE', id: id});\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}