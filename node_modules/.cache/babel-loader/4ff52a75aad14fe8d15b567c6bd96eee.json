{"ast":null,"code":"var _jsxFileName = \"C:\\\\impdata\\\\projects\\\\React_work\\\\foodordering_app\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (action, state) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount = state.totalAmount + action.item.amount * action.item.price;\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') return {\n    items: [],\n    totalAmount: 0\n  };\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, {\n    items: [],\n    totalAmount: 0\n  });\n\n  const addItemHandler = item => {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"hcng7Av166zAf5p9guG2WmTnI/c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/impdata/projects/React_work/foodordering_app/src/components/store/CartProvider.js"],"names":["CartContext","useReducer","cartReducer","action","state","type","updatedItems","items","concat","item","updatedAmount","totalAmount","amount","price","CartProvider","props","cartState","dispatchCart","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,MAAGD,MAAM,CAACE,IAAP,KAAgB,KAAnB,EACA;AACI,UAAMC,YAAY,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBL,MAAM,CAACM,IAA1B,CAArB;AACA,UAAMC,aAAa,GAAGN,KAAK,CAACO,WAAN,GAAoBR,MAAM,CAACM,IAAP,CAAYG,MAAZ,GAAmBT,MAAM,CAACM,IAAP,CAAYI,KAAzE;AACA,WAAO;AAAEN,MAAAA,KAAK,EAAED,YAAT;AAAuBK,MAAAA,WAAW,EAAED;AAApC,KAAP;AACH;;AACD,MAAGP,MAAM,CAACE,IAAP,KAAgB,QAAnB,EAEA,OAAO;AAAEE,IAAAA,KAAK,EAAE,EAAT;AAAaI,IAAAA,WAAW,EAAE;AAA1B,GAAP;AACH,CAVD;;AAYA,MAAMG,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,UAAU,CAACC,WAAD,EAAc;AACtDK,IAAAA,KAAK,EAAE,EAD+C;AAEtDI,IAAAA,WAAW,EAAE;AAFyC,GAAd,CAA5C;;AAIA,QAAMO,cAAc,GAAIT,IAAD,IAAU;AAC7BQ,IAAAA,YAAY,CAAC;AAACZ,MAAAA,IAAI,EAAE,KAAP;AAAcI,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMU,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,YAAY,CAAC;AAACZ,MAAAA,IAAI,EAAE,QAAP;AAAiBe,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBd,IAAAA,KAAK,EAAES,SAAS,CAACT,KADD;AAEhBI,IAAAA,WAAW,EAAEK,SAAS,CAACL,WAFP;AAGhBW,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst cartReducer = (action, state) => {\r\n    if(action.type === 'ADD')\r\n    {\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedAmount = state.totalAmount + action.item.amount*action.item.price;\r\n        return { items: updatedItems, totalAmount: updatedAmount }\r\n    }\r\n    if(action.type === 'REMOVE')\r\n    \r\n    return { items: [], totalAmount: 0 }\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCart] = useReducer(cartReducer, {\r\n        items: [],\r\n        totalAmount: 0\r\n    });\r\n    const addItemHandler = (item) => {\r\n        dispatchCart({type: 'ADD', item: item});\r\n    }\r\n    const removeItemHandler = (id) => {\r\n        dispatchCart({type: 'REMOVE', id: id});\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}